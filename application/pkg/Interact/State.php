<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: record.proto

namespace Interact;

use UnexpectedValueException;

/**
 *状态
 *
 * Protobuf type <code>interact.State</code>
 */
class State
{
    /**
     * 未指定
     *
     * Generated from protobuf enum <code>Unspecified = 0;</code>
     */
    const Unspecified = 0;
    /**
     *完成
     *
     * Generated from protobuf enum <code>Finish = 1;</code>
     */
    const Finish = 1;
    /**
     *待审核
     *
     * Generated from protobuf enum <code>Review = 2;</code>
     */
    const Review = 2;
    /**
     *取消
     *
     * Generated from protobuf enum <code>Cancel = 3;</code>
     */
    const Cancel = 3;
    /**
     *执行失败
     *
     * Generated from protobuf enum <code>Fail = 4;</code>
     */
    const Fail = 4;
    /**
     *申诉
     *
     * Generated from protobuf enum <code>Appeal = 5;</code>
     */
    const Appeal = 5;

    private static $valueToName = [
        self::Unspecified => 'Unspecified',
        self::Finish => 'Finish',
        self::Review => 'Review',
        self::Cancel => 'Cancel',
        self::Fail => 'Fail',
        self::Appeal => 'Appeal',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

